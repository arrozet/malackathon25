# Nginx configuration for Brain (Malackathon 2025)
# HTTP and HTTPS with Let's Encrypt support

upstream backend {
    server malackathon-backend:8000;
}

upstream frontend {
    server malackathon-frontend:5173;
}

# HTTP Server - Port 80
server {
    listen 80;
    server_name 158.179.212.221 dr-artificial.com www.dr-artificial.com;
    
    # ACME challenge location for Let's Encrypt certificate validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Redirect all other HTTP traffic to HTTPS (uncomment after getting certificate)
    # location / {
    #     return 301 https://$host$request_uri;
    # }
    
    # Temporary: Allow HTTP traffic until certificate is obtained
    client_max_body_size 20M;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss;

    # Health check endpoint
    location /health {
        proxy_pass http://backend/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Backend API
    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Frontend
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS Server - Port 443 (uncomment after obtaining SSL certificate)
# server {
#     listen 443 ssl http2;
#     server_name dr-artificial.com www.dr-artificial.com;
#     
#     # SSL Certificate paths
#     ssl_certificate /etc/letsencrypt/live/dr-artificial.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/dr-artificial.com/privkey.pem;
#     
#     # SSL Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_session_timeout 10m;
#     ssl_session_cache shared:SSL:10m;
#     
#     # Security headers
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     
#     client_max_body_size 20M;
#     
#     # Health check
#     location /health {
#         proxy_pass http://backend/health;
#         proxy_http_version 1.1;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto https;
#         access_log off;
#     }
# 
#     # Backend API
#     location /api/ {
#         rewrite ^/api/(.*) /$1 break;
#         proxy_pass http://backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto https;
#     }
# 
#     # Frontend
#     location / {
#         proxy_pass http://frontend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto https;
#     }
# }
