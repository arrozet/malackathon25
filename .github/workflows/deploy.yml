name: Deploy to Oracle Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite ejecutar manualmente desde GitHub UI

jobs:
  deploy:
    name: Deploy Brain to Production
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          # Configurar SSH key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Agregar host a known_hosts para evitar prompts
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          
          echo "‚úì SSH configurado correctamente"
      
      - name: Deploy to Oracle VM
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          CERTBOT_EMAIL: ${{ secrets.CERTBOT_EMAIL }}
        run: |
          echo "üöÄ Iniciando despliegue en Oracle Cloud..."
          
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'ENDSSH'
            set -e
            
            echo "üì¶ Actualizando c√≥digo desde GitHub..."
            cd ~/web/malackathon25 || cd /home/$USER/web/malackathon25
            
            # Pull latest changes
            git fetch origin
            git reset --hard origin/main
            
            echo "üîß Ejecutando script de deploy..."
            chmod +x deploy.sh
            
            # Ejecutar deploy (pasando el email de certbot)
            ./deploy.sh $CERTBOT_EMAIL
            
            echo "‚úÖ Deploy completado exitosamente"
          ENDSSH
          
          echo "‚úì Despliegue completado en Oracle Cloud"
      
      - name: Health Check
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
        run: |
          echo "üè• Verificando salud de la aplicaci√≥n..."
          sleep 10
          
          # Verificar endpoint de health
          if curl -s -f https://$DOMAIN/health > /dev/null; then
            echo "‚úÖ Aplicaci√≥n respondiendo correctamente"
          else
            echo "‚ö†Ô∏è  Advertencia: Health check fall√≥"
            exit 1
          fi
      
      - name: Notify deployment
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ DEPLOY EXITOSO - Brain est√° en producci√≥n"
          else
            echo "‚ùå DEPLOY FALLIDO - Revisar logs"
          fi

